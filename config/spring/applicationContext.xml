<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
			 			http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/mvc
			    		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/tx
			 			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/aop
			 			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			 			http://www.springframework.org/schema/task
			 			http://www.springframework.org/schema/task/spring-task-3.0.xsd
						http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
			 			http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
			 			http://cxf.apache.org/jaxws       
      					http://cxf.apache.org/schemas/jaxws.xsd"
	default-autowire="byName" default-lazy-init="false">
	
	<!--spring发布webservice服务配置 -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" /> 
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<import resource="datasource-mysql.xml" />
	
	<!-- 引入activeMQ配置文件 -->
	<import resource="spring-activemq-base.xml" />
	<import resource="spring-staff-listener.xml" />
	
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_center" />
		<property name="plugins">
			<array>
				<bean class="util.page.PaginationInterceptor" />
			</array>
		</property>
		<property name="configLocation" value="classpath:spring/mybatis.xml" />
		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:**/**/xml/*SqlMap.xml</value>
			</list>
		</property>
	</bean>
 	<bean id="propertiesManager" class="com.util.sendMessage.PropertiesUtil" scope="singleton" init-method="load"/>

	<!-- 映射扫描配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="**.**.dao" />
	</bean>
	<!-- 二级缓存 -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/WEB-INF/classes/spring/ehcache.xml" />
	</bean>
	<ehcache:annotation-driven cache-manager="ehCacheManager" />
	<mvc:annotation-driven />

	
	<!-- 声明通知类 -->
	<!-- <bean id="aspectBean" class="icom.axx.action.AopAspect" /> -->
	<!-- 启用spring对AspectJ注解的支持 -->
	<!-- <aop:aspectj-autoproxy /> -->


	<!-- 拦截器应用 -->
	<!--
		<mvc:interceptors> <bean
		class="com.system.interceptor.SystemInterceptor" />
		</mvc:interceptors>
	-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_center" />
	</bean>
	<!-- 以 @Transactional 标注来定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="icom">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 引入定时器-->
	<task:annotation-driven/>
	<context:annotation-config/>               
	<context:component-scan base-package="com.*.task"/>
	
	<!-- 加载定时任务配置文件,默认关闭，WEB服务发布时打开,部署在194上 -->
	<!--
	<import resource="classpath:com/linePatrol/xml/line-quartz.xml" />
	<import resource="classpath:com/roomInspection/xml/room-inspect-quartz.xml" />
	<import resource="classpath:com/linePatrol/xml/auto-line-quartz.xml" />
	<import resource="classpath:com/inspecthelper/xml/inspecthelper-quartz.xml" />
	<import resource="classpath:com/linePatrol/xml/auto-step-task-quartz.xml" />
	-->

	<!-- 加载定时任务配置文件,默认关闭，WEB服务发布时打开,部署在45上 -->
	<!-- 
	<import resource="classpath:com/linePatrol/xml/auto-line-two-quartz.xml" /> 
	-->
   
   <!-- 注入webservice服务 -->
   <bean id="cableTaskServiceBean" class="icom.webservice.serviceimpl.CableTaskServiceImpl" />  
   <jaxws:server id="cableTaskService" serviceClass="icom.webservice.service.CableTaskService"  
        address="/AppFlowService">  
        <jaxws:serviceBean>  
            <ref bean="cableTaskServiceBean" />  
        </jaxws:serviceBean>  
   </jaxws:server>  
   
   <bean id="getPortInfoServiceBean" class="com.webservice.portInfo.serviceimpl.GetPortInfosImpl" />  
   <jaxws:server id="getPortInfoService" serviceClass="com.webservice.portInfo.service.GetPortInfoService"  
        address="/GetPortInfoService">  
        <jaxws:serviceBean>  
            <ref bean="getPortInfoServiceBean" />  
        </jaxws:serviceBean>  
   </jaxws:server> 
   
   <!-- 统一工号管理接口 -->
   <bean id="UnifiedNoServiceBean" class="com.webservice.unifiedno.service.impl.UnifiedNoServiceImpl" />  
   <jaxws:server id="UnifiedNoService" serviceClass="com.webservice.unifiedno.service.UnifiedNoService" address="/unifiedNoService">  
        <jaxws:serviceBean>  
            <ref bean="UnifiedNoServiceBean" />  
        </jaxws:serviceBean>  
   </jaxws:server> 


	<bean id="intelligenceNetworkMServiceBean" class="com.webservice.intelligenceNetworkM.serviceimpl.IntelligenceNetworkMImpl" />  
   <jaxws:server id="intelligenceNetworkMService" serviceClass="com.webservice.intelligenceNetworkM.service.IntelligenceNetworkMService"  
        address="/intelligenceNetworkMService">  
        <jaxws:serviceBean>  
            <ref bean="intelligenceNetworkMServiceBean" />  
        </jaxws:serviceBean>  
   </jaxws:server>
   
   	<bean id="TroubleBillServiceBean" class="com.webservice.Wfworkitemflow.serviceimpl.TroubleBillServiceImpl" />  
   <jaxws:server id="TroubleBillService" serviceClass="com.webservice.Wfworkitemflow.service.TroubleBillService" address="/TroubleBillService">  
        <jaxws:serviceBean>  
            <ref bean="TroubleBillServiceBean" />  
        </jaxws:serviceBean>  
   </jaxws:server> 
   
   <!-- 巡线点和设施点的GPS坐标经纬度改为百度坐标经纬度 -->
   <bean id="changeCooBean" class="com.webservice.changeCoordinate.serviceimpl.ChangeCooServiceImpl" />  
   <jaxws:server id="changeCooService" serviceClass="com.webservice.changeCoordinate.service.ChangeCooService" address="/changeCooService">  
        <jaxws:serviceBean>  
            <ref bean="changeCooBean" />  
        </jaxws:serviceBean>  
   </jaxws:server> 
   
   
   <!-- 脱敏的拦截器 -->
   <mvc:interceptors>  
    	<mvc:interceptor>  
        	<mvc:mapping path="/mobile/cableCheck/selectWorkOrderList.do" />
        	<bean class="icom.cableCheck.action.SensitiveLogInte"/>  
    	</mvc:interceptor>
    	<mvc:interceptor>  
        	<mvc:mapping path="/mobile/cableCheck/getPortDetail.do" />
        	<bean class="icom.cableCheck.action.SensitiveLogInte"/>  
    	</mvc:interceptor>    
   </mvc:interceptors>
   
</beans>
