<?xml version="1.0" encoding="UTF-8" ?>    
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cableInspection.dao.CoordinateDao">

	<select id="query" parameterType="util.page.Query" resultType="map">
select r.RECORD_ID,
       r.EQUIP_CODE,
       r.EQUIP_NAME,
       et.EQUIPMENT_TYPE_NAME,
       r.LONGITUDE,
       r.LATITUDE,
       r.POINT_ID,
       s.STAFF_NAME as INSPECTOR,
       a1.NAME as AREA_NAME,
       a2.NAME as SON_AREA_NAME,
        decode( r.mnt_level_id,1,'A1',2,'A2',3,'A3',4,'B1',5,'B2',6,'B3',
       7,'C1',8,'C2',9,'C3','')as point_level,
       decode(r.TERMINAL_TYPE, 1, 'mobile', 'pc') as TERMINAL_TYPE,
       r.type,
       decode(r.type,1,'已审核',2,'自动审核','未审核') typeName,
       to_char(r.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss') CREATE_TIME,
       r.COMMIT_STAFF_ID,
       (select STAFF_NAME from TB_BASE_STAFF tbs where r.COMMIT_STAFF_ID=tbs.STAFF_ID) commitName,
       to_char(r.COMMIT_DATE,'yyyy-mm-dd hh24:mi:ss') COMMIT_date
  from TB_INS_RECORD  r 
       left join AREA a1 on r.AREA_ID = a1.AREA_ID 
       left join AREA a2 on r.SON_AREA_ID = a2.AREA_ID
       left join TB_BASE_STAFF s on r.INSPECTOR = s.STAFF_ID
       left join  TB_INS_EQUIPMENT_TYPE et  on r.EQUIP_TYPE = et.EQUIPMENT_TYPE_ID
 where 
    r.IS_DELETE =0
   and r.RECORD_TYPE = 5

   		<if test="queryParams.EQUIP_CODE != null and queryParams.EQUIP_CODE != ''">
   			and r.EQUIP_CODE like '%'||#{queryParams.EQUIP_CODE}||'%'
   		</if>
   		<if test="queryParams.EQUIP_NAME != null and queryParams.EQUIP_NAME != ''">
   			and r.EQUIP_NAME like '%'||#{queryParams.EQUIP_NAME}||'%'
   		</if>
   		<if test="queryParams.EQUIP_TYPE != null and queryParams.EQUIP_TYPE != ''">
   			and r.EQUIP_TYPE = #{queryParams.EQUIP_TYPE}
   		</if>
   		<if test="queryParams.START_TIME != null and queryParams.START_TIME != ''">
   			<![CDATA[
   			and r.CREATE_TIME >= TO_DATE(#{queryParams.START_TIME}, 'yyyy-mm-dd hh24:mi:ss')
   			]]>
   		</if>
   		<if test="queryParams.END_TIME != null and queryParams.END_TIME != ''">
   			<![CDATA[
   			and r.CREATE_TIME <= TO_DATE(#{queryParams.END_TIME}, 'yyyy-mm-dd hh24:mi:ss')
   			]]>
   		</if>
   		<if test="queryParams.AREA_ID != null and queryParams.AREA_ID != ''">  
            <![CDATA[
	    	AND r.AREA_ID = #{queryParams.AREA_ID}
	    	]]>
		</if>
		<if test="queryParams.SON_AREA_ID != null and queryParams.SON_AREA_ID != ''">  
            <![CDATA[
	    	AND r.SON_AREA_ID = #{queryParams.SON_AREA_ID}
	    	]]>
		</if>
		<if test="queryParams.type != null and queryParams.type != ''">  
            <![CDATA[
	    	AND r.type = #{queryParams.type}
	    	]]>
		</if>
   		order by r.CREATE_TIME DESC
	</select>
	
	<select id="getDetail" parameterType="string" resultType="map" statementType="STATEMENT">
select r.RECORD_ID,
       r.EQUIP_CODE,
       r.EQUIP_NAME,
       et.equipment_type_id,
       et.EQUIPMENT_TYPE_NAME,
       r.LONGITUDE,
       r.LATITUDE,
       INSPECTOR,
       EQUIP_TYPE,
       r.AREA_ID,
       r.SON_AREA_ID,
       a1.NAME as AREA_NAME,
       a2.NAME as SON_AREA_NAME,
       r.mnt_level_id
from TB_INS_RECORD         r
left join area a1 on r.AREA_ID = a1.AREA_ID
left join area a2 on r.SON_AREA_ID = a2.AREA_ID
left join TB_INS_EQUIPMENT_TYPE et on r.EQUIP_TYPE = et.EQUIPMENT_TYPE_ID  
 where r.RECORD_ID in (${_parameter})
 order by r.RECORD_ID
	</select>
	
	<select id="getPhotoListByRecordId" parameterType="string" resultType="map">
		select p.PHOTO_PATH from TB_INS_PHOTO p, TB_INS_PHOTO_REL pr where p.PHOTO_ID = pr.PHOTO_ID and pr.RECORD_ID = #{RECORD_ID}
	</select>
	
	<select id="queryPointByEquipCode" parameterType="map" resultType="map">
		select POINT_ID from TB_INS_POINT where POINT_NO = #{OLD_EQUIP_NO}
	</select>
	
	<select id="queryRecordByEquipCode" parameterType="map" resultType="map">
		select RECORD_ID from TB_INS_Record where EQUIP_CODE = #{EQUIP_CODE}
	</select>	
	
	<update id="updatePointCoordinate" parameterType="map">
		update TB_INS_POINT 
		SET POINT_NO=#{POINT_NO},
			POINT_NAME=#{POINT_NAME},
			POINT_LEVEL=#{POINT_LEVEL},
			EQP_TYPE_ID=#{EQP_TYPE_ID}, 
			LONGITUDE = #{LONGITUDE}, 
			LATITUDE = #{LATITUDE},
			MODIFY_TIME=sysdate,
			MODIFY_STAFF=#{CREATE_STAFF},
			area_id = #{AREA_ID},
			son_area_id = #{SON_AREA_ID},
			ORIGIN_TYPE = 0
		WHERE POINT_ID = #{POINT_ID} 
	</update>
	
	<update id="deleteRecord" parameterType="map" statementType="STATEMENT">
		update TB_INS_RECORD set IS_DELETE = 1 where RECORD_ID in (${recordIds})
	</update>
	<update id="commitRecord" parameterType="map" >
		update TB_INS_RECORD set type = 1,
		COMMIT_STAFF_ID =#{COMMIT_STAFF_ID} ,
		commit_date = sysdate ,
		EQUIP_CODE=#{EQUIP_CODE},
		EQUIP_NAME=#{EQUIP_NAME},
		EQUIP_TYPE=#{EQUIP_TYPE},
		MNT_LEVEL_ID=#{MNT_LEVEL_ID}
		where RECORD_ID in (${recordIds})
	</update>
		<select id="exportPointsList" parameterType="map" resultType="map">
select r.RECORD_ID,
       r.EQUIP_CODE,
       r.EQUIP_NAME,
       et.EQUIPMENT_TYPE_NAME,
       r.LONGITUDE,
       r.LATITUDE,
       s.STAFF_NAME as INSPECTOR,
       a1.NAME as AREA_NAME,
       a2.NAME as SON_AREA_NAME,
       decode(r.TERMINAL_TYPE, 1, 'mobile', 'pc') as TERMINAL_TYPE,
       r.type,
       decode(r.type,1,'已审核','未审核') typeName,
       to_char(r.CREATE_TIME,'yyyy-mm-dd hh24:mi:ss') CREATE_TIME,
       r.COMMIT_STAFF_ID,
       (select STAFF_NAME from TB_BASE_STAFF tbs where r.COMMIT_STAFF_ID=tbs.STAFF_ID) commitName,
       to_char(r.COMMIT_DATE,'yyyy-mm-dd hh24:mi:ss') COMMIT_date
  from TB_INS_RECORD         r,
       AREA                  a1,
       AREA                  a2,
       TB_BASE_STAFF         s,
       TB_INS_EQUIPMENT_TYPE et
 where r.AREA_ID = a1.AREA_ID
   and r.SON_AREA_ID = a2.AREA_ID
   and r.INSPECTOR = s.STAFF_ID
   and IS_DELETE =0
   and r.EQUIP_TYPE = et.EQUIPMENT_TYPE_ID
   and r.RECORD_TYPE = 5
   		<if test="EQUIP_CODE != null and EQUIP_CODE != ''">
   			and r.EQUIP_CODE like '%'||#{EQUIP_CODE}||'%'
   		</if>
   		<if test="EQUIP_NAME != null and EQUIP_NAME != ''">
   			and r.EQUIP_NAME like '%'||#{EQUIP_NAME}||'%'
   		</if>
   		<if test="EQUIP_TYPE != null and EQUIP_TYPE != ''">
   			and r.EQUIP_TYPE = #{EQUIP_TYPE}
   		</if>
   		<if test="START_TIME != null and START_TIME != ''">
   			<![CDATA[
   			and r.CREATE_TIME >= TO_DATE(#{START_TIME}, 'yyyy-mm-dd hh24:mi:ss')
   			]]>
   		</if>
   		<if test="END_TIME != null and END_TIME != ''">
   			<![CDATA[
   			and r.CREATE_TIME <= TO_DATE(#{END_TIME}, 'yyyy-mm-dd hh24:mi:ss')
   			]]>
   		</if>
   		<if test="AREA_ID != null and AREA_ID != ''">  
            <![CDATA[
	    	AND r.AREA_ID = #{AREA_ID}
	    	]]>
		</if>
		<if test="SON_AREA_ID != null and SON_AREA_ID != ''">  
            <![CDATA[
	    	AND r.SON_AREA_ID = #{SON_AREA_ID}
	    	]]>
		</if>
		<if test="type != null and type != ''">  
            <![CDATA[
	    	AND r.type = #{type}
	    	]]>
		</if>
   		order by r.CREATE_TIME DESC
	</select>
	<select id="checkPointRecordList" parameterType="string" resultType="map" statementType="STATEMENT">
	select * from ( 
		select distinct plan.plan_id,
		                plan.plan_no,
		                plan.plan_name,
		                plan.plan_type,
		                task.task_id,
		                task.task_no,
		                task.task_name,
		                tip.point_id,
		                tip.point_no,
		                tip.point_name,
		                tip.point_type,
		                tis.record_id,
		                tis.inspector,
		                (select s.staff_name from tb_base_staff s where s.staff_id=tis.inspector) checkName,
		                tis.descrp,
		                to_char(tis.create_time,'yyyy-mm-dd hh24:mi:ss') create_time
		  from tb_ins_record record
		  left join tb_ins_point tip on record.equip_code = tip.point_no
		  left join tb_ins_record tis on tis.point_id = tip.point_id
		  left join tb_ins_plan plan on plan.plan_id = tis.plan_id
		  left join tb_ins_task task on task.task_id = tis.task_id
		 where  record.RECORD_ID in (${_parameter})
 		)order by create_time desc
	</select>
	
	<select id="getPointInfos" parameterType="map" resultType="map">
		select pe.PHY_EQP_ID as phy_eqp_id,
			   pe.NO as no, 
			   pr.CODE as point_level
		  from pub_restriction@${jndi} pr
		  inner join phy_equipment@${jndi} pe 
		  on pe.mnt_level_id = pr.serial_no
      		where pe.no=#{POINT_NO}
	</select>
	
	<select id="querySumOfCood" parameterType="map" resultType="map">
	<!-- 
select dd.name,
nvl(aa.sum1,0) sum1,
nvl(bb.sum2,0) sum2,
nvl(cc.sum3,0) sum3,
nvl(ee.sum4,0) sum4,
nvl(ff.sum5,0) sum5,
nvl(ss.sum8,0) sum6,
nvl(rr.sum6,0) sum7,
nvl(gg.sum7,0) sum8,
to_char(nvl(hh.DISTANCE,0),'fm999990.09') sum9,
to_char(nvl(uu.DISTANCE,0),'fm999990.09') sum10,
nvl(jj.sum11,0) sum11,
to_char(nvl(kk.DISTANCE,0),'fm9990.09') sum12,
to_char(nvl(o.zj_length,0),'fm999990.09') sum13,
to_char(nvl(decode(nvl(o.zj_length,1),1,0,uu.DISTANCE)/nvl(o.zj_length,1)*100,0),'fm990.09')||'%' sum15,
nvl(qq.sum16,0) sum16,
nvl(ww.sum17,0) sum17,
nvl(tt.sum18,0) sum18,
to_char(nvl(pp.DISTANCE,0),'fm999990.09') sum19,
to_char(nvl(kkk.DISTANCE,0),'fm9990.09') sum20,
to_char(nvl(uuu.DISTANCE,0),'fm999990.09') sum21,
to_char(nvl(o.zg_lentg,0),'fm999990.09') sum22,
to_char(nvl(decode(nvl(o.zg_lentg,1),1,0,uuu.DISTANCE)/nvl(o.zg_lentg,1)*100,0),'fm990.09')||'%' sum23
 from (
select a.name,a.area_id,1000 sum10,1001 sum11,1005 sum12,1006 sum13,1007 sum14,a.parent_area_id from area a
) dd
left join (select 
f.eqp_type_id,count(f.point_id) sum1,f.area_id
  from  (
select distinct p.point_id,p.eqp_type_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type=4 and l2.line_level in (1,3)
<![CDATA[
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
) f
group by f.eqp_type_id,f.area_id)
aa on aa.area_id=dd.area_id and aa.eqp_type_id=dd.sum10
left join (select 
f.eqp_type_id,count(f.point_id) sum2,f.area_id
  from  (
select distinct p.point_id,p.eqp_type_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type=4 and l2.line_level in (1,3)
<![CDATA[
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
) f
group by f.eqp_type_id,f.area_id)
bb on bb.area_id=dd.area_id and bb.eqp_type_id=dd.sum11 
left join (select 
f.eqp_type_id,count(f.point_id) sum3,f.area_id
  from  (
select distinct p.point_id,p.eqp_type_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level in (1,3)
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
) f
group by f.eqp_type_id,f.area_id)
cc on cc.area_id=dd.area_id and cc.eqp_type_id=dd.sum12 
left join (select 
f.eqp_type_id,count(f.point_id) sum4,f.area_id
  from  (
select distinct p.point_id,p.eqp_type_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level in (1,3)
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
) f
group by f.eqp_type_id,f.area_id)
ee on ee.area_id=dd.area_id and ee.eqp_type_id=dd.sum13 
left join (select 
f.eqp_type_id,count(f.point_id) sum5,f.area_id
  from  (
select distinct p.point_id,p.eqp_type_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level in (1,3)
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
) f
group by f.eqp_type_id,f.area_id)
ff on ff.area_id=dd.area_id and ff.eqp_type_id=dd.sum14
left join (select 
count(f.point_id) sum6,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level in (1,3)
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type=-1
]]>
) f
group by f.area_id)
rr on rr.area_id=dd.area_id
left join (
select count(1) sum7,p.${area_type} area_id from tb_ins_point p where p.point_type=2
<![CDATA[
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
group by p.${area_type}) gg on gg.area_id=dd.area_id
left join (
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L2.LINE_ID,LP.POINT_SEQ,l2.${area_type} area_id,l.line_id parent_line_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l2.line_id,lp.point_seq-1 point_seq,l2.${area_type} area_id,l.line_id parent_line_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type =4 and l2.line_level !=2
<![CDATA[
and l2.create_time >= to_date(#{date},'yyyy-mm') and l2.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  ]]>
  ORDER BY L2.LINE_ID,POINT_SEQ
  ) B ON B.LINE_ID=L2.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  where l.line_type=4 and l2.line_level !=2
 <![CDATA[ 
  and l2.create_time >= to_date(#{date},'yyyy-mm') and l2.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  ]]>
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ) GROUP BY area_id
  ) hh on hh.area_id=dd.area_id
  left join (select 
count(f.point_id) sum8,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type=4 and l2.line_level in (1,3)
<![CDATA[
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type in (1,4)
]]>
) f
group by f.area_id)
ss on ss.area_id=dd.area_id
left join (
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L2.LINE_ID,LP.POINT_SEQ,l2.${area_type} area_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from tb_ins_line l2 
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l2.line_id,lp.point_seq-1 point_seq,l2.${area_type} area_id 
from  tb_ins_line l2
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l2.line_level!=2 and l2.line_type in (0,4) and l2.create_time >= to_date('2017-06','yyyy-mm')
  ORDER BY L2.LINE_ID,POINT_SEQ
  ) B ON B.LINE_ID=L2.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  where l2.line_level!=2 and l2.line_type in (0,4) and l2.create_time >= to_date('2017-06','yyyy-mm')
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ) GROUP BY area_id
  ) uu on uu.area_id=dd.area_id
left join (select 
count(f.point_id) sum11,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type=4 and l2.line_level in (1,3)
<![CDATA[
and p.create_time >= to_date(#{date},'yyyy-mm') 
and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
]]>
and p.point_type=4
) f
group by f.area_id)
jj on jj.area_id=dd.area_id 
left join(
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L.LINE_ID,LP.POINT_SEQ,l.${area_type} area_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from tb_ins_line l
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l.line_id,lp.point_seq-1 point_seq,l.${area_type} area_id from tb_ins_line l
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_level!=2 and l.line_type=0 and l.parent_line_id is null and l.create_time >= to_date('2017-06','yyyy-mm')
  ]]>
  ) B ON B.LINE_ID=L.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  <![CDATA[
  where l.line_level!=2 and l.line_type=0 and l.parent_line_id is null and l.create_time >= to_date('2017-06','yyyy-mm')
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ]]>
  ) GROUP BY area_id
) kk on kk.area_id=dd.area_id
left join tb_ins_osscable_length o on o.son_area_id=dd.area_id
left join (select 
count(f.point_id) sum16,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level =2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type=-1
]]>
) f
group by f.area_id)
qq on qq.area_id=dd.area_id
left join (select 
count(f.point_id) sum17,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level =2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type = 1
]]>
) f
group by f.area_id)
ww on ww.area_id=dd.area_id
left join (select 
count(f.point_id) sum18,f.area_id
  from  (
select distinct p.point_id,p.${area_type} area_id from tb_ins_line l
join tb_ins_line l2 on l2.parent_line_id=l.line_id
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_type=4 and l2.line_level =2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type = 4
]]>
) f
group by f.area_id)
tt on tt.area_id=dd.area_id
left join (
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L2.LINE_ID,LP.POINT_SEQ,l2.area_id area_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from  tb_ins_line l2 
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l2.line_id,lp.point_seq-1 point_seq,l2.${area_type} area_id from  tb_ins_line l2
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l2.line_level =2 and l2.line_type=4
<![CDATA[
and l2.create_time >= to_date(#{date},'yyyy-mm') and l2.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  ]]>
  ORDER BY L2.LINE_ID,POINT_SEQ
  ) B ON B.LINE_ID=L2.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  where  l2.line_level =2 and l2.line_type=4
  <![CDATA[
  and l2.create_time >= to_date(#{date},'yyyy-mm') and l2.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  ]]>
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ) GROUP BY area_id
  ) pp on pp.area_id=dd.area_id
 left join(
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L.LINE_ID,LP.POINT_SEQ,l.${area_type} area_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from tb_ins_line l
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l.line_id,lp.point_seq-1 point_seq,l.${area_type} area_id from tb_ins_line l
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
<![CDATA[
where l.line_level=2 and l.line_type=0 
  and l.create_time >= to_date(#{date},'yyyy-mm') and l.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  ]]>
  ) B ON B.LINE_ID=L.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  <![CDATA[
  where l.line_level=2 and l.line_type=0
    and l.create_time >= to_date(#{date},'yyyy-mm') and l.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
  
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ]]>
  ) GROUP BY area_id
) kkk on kkk.area_id=dd.area_id
left join (
  SELECT round(SUM(DIS)/1000,2) DISTANCE,area_id FROM(
  SELECT L2.LINE_ID,LP.POINT_SEQ,l2.${area_type} area_id,
  ROUND(SDO_GEOM.SDO_DISTANCE(MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(P.LONGITUDE,P.LATITUDE,0),NULL,NULL),
  MDSYS.SDO_GEOMETRY(2001,8307,MDSYS.SDO_POINT_TYPE(B.LONGITUDE,B.LATITUDE,0),NULL,NULL),1),2)  DIS
  from tb_ins_line l2 
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
  JOIN (
select distinct p.longitude,p.latitude,l2.line_id,lp.point_seq-1 point_seq,l2.${area_type} area_id 
from  tb_ins_line l2
join tb_ins_line_point lp on lp.line_id=l2.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l2.line_level=2 and l2.line_type in (0,4) and l2.create_time >= to_date('2017-06','yyyy-mm')
  ORDER BY L2.LINE_ID,POINT_SEQ
  ) B ON B.LINE_ID=L2.LINE_ID AND LP.POINT_SEQ=B.POINT_SEQ
  where l2.line_level=2 and l2.line_type in (0,4) and l2.create_time >= to_date('2017-06','yyyy-mm')
  ORDER BY LP.LINE_ID,LP.POINT_SEQ
  ) GROUP BY area_id
  ) uuu on uuu.area_id=dd.area_id
  where dd.parent_area_id=#{area_id}
  order by dd.area_id-->
  
  select ok.area_id,
  a_name.name,
 sum(ok.sum1) sum1,
  sum(ok.sum2) sum2,
  sum(ok.sum3) sum3,
  sum(ok.sum4) sum4,
  sum(ok.sum5) sum5,
  sum(ok.sum6) sum6,
  sum(ok.sum7) sum7,
  sum(ok.sum11) sum11,
  to_char(sum(ok.sum9),'fm999990.09') sum9,
  to_char(sum(ok.sum12),'fm999990.09') sum12,
  to_char(sum(ok.sum10),'fm999990.09') sum10,
  to_char(sum(ok.sum13),'fm999990.09') sum13,
  to_char(nvl(decode(nvl(sum(ok.sum13),0),0,0,sum(ok.sum10))/decode(sum(ok.sum13),0,1,sum(ok.sum13))*100,0),'fm990.09')||'%' sum15,
  sum(ok.sum16) sum16,
  sum(ok.sum17) sum17,
  sum(ok.sum18) sum18,
  to_char(sum(ok.sum19),'fm999990.09') sum19,
  to_char(sum(ok.sum20),'fm999990.09') sum20,
  to_char(sum(ok.sum21),'fm999990.09') sum21,
  to_char(sum(ok.sum22),'fm999990.09') sum22,
  to_char(nvl(decode(nvl(sum(ok.sum22),0),0,0,sum(ok.sum21))/decode(sum(ok.sum22),0,1,sum(ok.sum22))*100,0),'fm990.09')||'%' sum23,
  sum(ok.sum8) sum8
    from (
  select 
  <if test="check==1">
  decode(aa.state,null,decode(aa.parent_area_id,3,9,4,8,15,16,39,17,20,40,26,28,33,24,48,49,60,61,63,64,69,70,84,85,79,80),aa.area_id) area_id,
  </if>
  <if test="check==0">
  aa.area_id,
  </if>
  aa.area_id true_area_id,
nvl(bbb.sum1,0) sum1,
nvl(bbb.sum2,0) sum2,
nvl(bbb.sum3,0) sum3,
nvl(bbb.sum4,0) sum4,
nvl(bbb.sum5,0) sum5,
nvl(ccc.sum1,0) sum6,
nvl(ccc.sum2,0) sum7,
nvl(ccc.sum3,0) sum11,
nvl(ddd.distance,0) sum9,
nvl(eee.distance,0) sum12,
nvl(fff.distance,0) sum10,
nvl(o.zj_length,0) sum13,
nvl(ggg.sum1,0) sum16,
nvl(ggg.sum2,0) sum17,
nvl(ggg.sum3,0) sum18,
nvl(hhh.DISTANCE,0) sum19,
nvl(iii.DISTANCE,0) sum20,
nvl(jjj.DISTANCE,0) sum21,
nvl(o.zg_lentg,0) sum22,
nvl(kk.sum7,0) sum8
 from (
select a.name,a.area_id,1000 sum1,1001 sum2,1005 sum3,1006 sum4,1007 sum5,a.parent_area_id,a.state from area a
) aa
<![CDATA[
left join (
select max(decode(bb.eqp_type_id,1000,bb.eqp_count,0)) sum1,
max(decode(bb.eqp_type_id,1001,bb.eqp_count,0)) sum2,
max(decode(bb.eqp_type_id,1005,bb.eqp_count,0)) sum3,
max(decode(bb.eqp_type_id,1006,bb.eqp_count,0)) sum4,
max(decode(bb.eqp_type_id,1007,bb.eqp_count,0)) sum5,
bb.area_id from (
select distinct nvl(count(distinct p.point_id) over(partition by p.eqp_type_id,p.${area_type}),0) eqp_count,p.eqp_type_id,p.${area_type} area_id from tb_ins_line parent_l
join tb_ins_line l on l.parent_line_id=parent_l.line_id
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type in (0,4) and l.line_level !=2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.eqp_type_id is not null and p.eqp_type_id in (1000,1001,1005,1006,1007)
) bb group by bb.area_id
) bbb on bbb.area_id=aa.area_id
left join (
select max(decode(cc.point_type,-1,cc.point_count,0)) sum1,
max(decode(cc.point_type,1,cc.point_count,0)) sum2,
max(decode(cc.point_type,4,cc.point_count,0)) sum3,
cc.area_id from (
select distinct nvl(count(distinct p.point_id) over(partition by p.point_type,p.${area_type}),0) point_count,p.point_type,p.${area_type} area_id from tb_ins_line parent_l
join tb_ins_line l on l.parent_line_id=parent_l.line_id
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type in (0,4) and l.line_level !=2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type is not null and p.point_type in (-1,1,4)
) cc group by cc.area_id
) ccc on ccc.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from  tb_ins_line l
where l.line_type =4 and l.line_level !=2
and l.create_time >= to_date(#{date},'yyyy-mm') and l.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
group by l.${area_type}
) ddd on ddd.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from tb_ins_line l
where l.line_level!=2 and l.line_type=0  and l.create_time >= to_date('2017-01','yyyy-mm')
 group by l.${area_type}
) eee on eee.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from tb_ins_line l
where l.line_level!=2 and l.line_type in (0,4)  and l.create_time >= to_date('2017-01','yyyy-mm')
 group by l.${area_type}
) fff on fff.area_id=aa.area_id
left join tb_ins_osscable_length o on o.son_area_id=aa.area_id
left join (
select max(decode(gg.point_type,-1,gg.point_count,0)) sum1,
max(decode(gg.point_type,1,gg.point_count,0)) sum2,
max(decode(gg.point_type,4,gg.point_count,0)) sum3,
gg.area_id from (
select distinct nvl(count(distinct p.point_id) over(partition by p.point_type,p.${area_type}),0) point_count,p.point_type,p.${area_type} area_id from tb_ins_line parent_l
join tb_ins_line l on l.parent_line_id=parent_l.line_id
join tb_ins_line_point lp on lp.line_id=l.line_id
join tb_ins_point p on p.point_id=lp.point_id
where l.line_type in (0,4) and l.line_level =2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
and p.point_type is not null and p.point_type in (-1,1,4)
) gg group by gg.area_id
) ggg on ggg.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from  tb_ins_line l
where l.line_type =4 and l.line_level =2
and l.create_time >= to_date(#{date},'yyyy-mm') and l.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
group by l.${area_type}
) hhh on hhh.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from tb_ins_line l
where l.line_level=2 and l.line_type=0  and l.create_time >= to_date('2017-01','yyyy-mm')
 group by l.${area_type}
) iii on iii.area_id=aa.area_id
left join (
select round(sum(l.length)/1000,2) DISTANCE,l.${area_type} area_id from tb_ins_line l
where l.line_level=2 and l.line_type in (0,4)  and l.create_time >= to_date('2017-01','yyyy-mm')
 group by l.${area_type}
) jjj on jjj.area_id=aa.area_id
left join (
select count(1) sum7,p.${area_type} area_id from tb_ins_point p where p.point_type=2
and p.create_time >= to_date(#{date},'yyyy-mm') and p.create_time<add_months(to_date(#{date},'yyyy-mm'),1)
group by p.${area_type}) kk on kk.area_id=aa.area_id
where aa.parent_area_id=#{area_id}
order by aa.area_id
) ok,area a_name where a_name.area_id=ok.area_id group by ok.area_id,a_name.name
order by ok.area_id
]]>
	</select>
</mapper>